
server.port=8090

#baseQuery=select r.LANumber, RequestPurpose, s.SourceApplicationName, r.PaymentRequestID, r.LoanType, r.Amount, RequestStatus, r.Currency, r.PaymentPurpose, f.MerchantID, PaymentRequestDateTime, r.Mode, r.RefTransaction, r.paymentRef, bankCode, favourName, remarks, razorpay_order_id, razorpay_payment_id, f.FundingAccount, PennantReceiptNo, PennantReceiptDate, PennantErrorDesc, t.auth_code, r.ErrorDescription as PaymentRequestError, pt.error_description as WebhookError, pt.account_id from TrnPaymentRequest r left join TrnPaymentTransaction t on r.PaymentRequestID=t.PaymentRequestID left join TrnPaymentReceipt p on p.PaymentTransactionID=t.PaymentTransactionID left join MstSourceMapping s on s.SourceID=r.SourceID left join dbo.MstFundAccountMapping f on r.LoanType = f.LoanType and r.PaymentPurpose = f.PaymentPurpose left join dbo.Payment pt on t.razorpay_order_id = pt.entity_order_id and pt.event='payment.captured'
baseQuery=select r.LANumber, RequestPurpose, s.SourceApplicationName, r.PaymentRequestID, r.LoanType, r.Amount, RequestStatus, r.Currency, r.PaymentPurpose, f.MerchantID, PaymentRequestDateTime, r.Mode, r.RefTransaction, r.paymentRef, bankCode, favourName, remarks, razorpay_order_id, razorpay_payment_id, f.FundingAccount, PennantReceiptNo, PennantReceiptDate, PennantErrorDesc, t.auth_code, r.ErrorDescription as PaymentRequestError, pt.error_description as WebhookError, pt.account_id, tfsh.SMSStatus, tpeh.EmailStatus from TrnPaymentRequest r  left join TrnPaymentTransaction t on r.PaymentRequestID=t.PaymentRequestID left join TrnPaymentReceipt p on p.PaymentTransactionID=t.PaymentTransactionID left join MstSourceMapping s on s.SourceID=r.SourceID left join dbo.MstFundAccountMapping f on r.LoanType = f.LoanType and r.PaymentPurpose = f.PaymentPurpose left join dbo.Payment pt on t.razorpay_order_id = pt.entity_order_id and pt.event='payment.captured' left join TrnFeePayment tfp on t.PaymentRequestID = tfp.PaymentRequestID left join TrnFeeSMSHistory tfsh on tfp.id = tfsh.paymentFeeId left join TrnPaymentEmailHistory tpeh on tfp.id = tpeh.PaymentTransactionID

#spring.jpa.properties.hibernate.current_session_context_class=org.springframework.orm.hibernate4.SpringSessionContext
#smsContent=Dear Customer, The amount due towards your Loan No: <LOAN_NUMBER> with Avanse Financial Services. Request you make payments at the earliest. You can use the below link to make payments towards your loan account.\n<TINY_URL>\n\nIn case of any queries please write to us on wecare@avanse.com
emailSubject=Avanse Online Payment - <PAYMENT_PURPOSE>
#emailContent=Dear Customer, \r\n\r\nThe amount due towards your Loan No: <LOAN_NUMBER> with Avanse Financial Services. Request you make payments at the earliest. You can use the below link to make payments towards your loan account.\r\n\r\n\r\n<TINY_URL>\r\n\r\n\r\nIn case of any queries please write to us on wecare@avanse.com

#UAT BIG URL
#bigPaymentURL=https://uatpaymnt.avanse.com/PaymentApp/Home/Index?PaymentRequestId=<REQUEST_ID>&Token=MDc2NmRmZDItNzliZS00OWFmLTg3ZDYtNzE5YTk2Y2RjMGRiOiQyYSQwNCRzbFkxTXkwZjhiNFliNjVnQnpaYkEuaWtVUUNyYkJYNEE5N1BuQzNGVmRiajVaOGlSSFhscQ==&PaymentPurpose=<PAYMENT_PURPOSE>

#PROD BIG URL
bigPaymentURL=https://paymnt.avanse.com/PaymentApp/Home/Index?PaymentRequestId=<REQUEST_ID>&Token=MDc2NmRmZDItNzliZS00OWFmLTg3ZDYtNzE5YTk2Y2RjMGRiOiQyYSQwNCRzbFkxTXkwZjhiNFliNjVnQnpaYkEuaWtVUUNyYkJYNEE5N1BuQzNGVmRiajVaOGlSSFhscQ==&PaymentPurpose=<PAYMENT_PURPOSE>


#Lauren
#tinyUrl=https://uatpaymnt.avanse.com/ShortLinkApp/api/LinkUrl/addlink
#tiny.username=admin@avanse.com
#tiny.password=Mumbai@2009
#tiny.expirytime=5

#Avanse UAT
#tinyUrl=http://10.250.6.21:81/ShortLinkApp/api/LinkUrl/addlink
#tiny.username=admin@avanse.com
#tiny.password=Mumbai@2009
#tiny.expirytime=3

#Avanse Prod
tinyUrl=https://paymnt.avanse.com/ShortLinkApp/api/LinkUrl/addlink
tiny.username=admin@avanse.com
tiny.password=Mumbai@2009
tiny.expirytime=3

#Lauren dev
#overDueApi=http://localhost:8090/customer/getOverdue
#isValidLANApi=http://localhost:8090/customer/isValidLAN
#getLoanDetails=http://localhost:8090/customer/getLoanDetails
#getLoanDetailsOthers=http://localhost:8090/customer/getLoanDetailsOthers

#Avanse UAT dev
#feeAPI=https://uatpaymntapi.avanse.com/ELMSPennantViews/customer/getOverdue
#overDueApi=https://uatpaymntapi.avanse.com/ELMSPennantViews/customer/getOverdue
#isValidLANApi=https://uatpaymntapi.avanse.com/ELMSPennantViews/customer/isValidLAN
#getLoanDetails=https://uatpaymntapi.avanse.com/ELMSPennantViews/customer/getLoanDetails
#getLoanDetailsOthers=https://uatpaymntapi.avanse.com/ELMSPennantViews/customer/getLoanDetailsOthers

#Avanse UAT
#overDueApi=http://10.250.6.21:8090/ELMSPennantViews/customer/getOverdue
#isValidLANApi=http://10.250.6.21:8090/ELMSPennantViews/customer/isValidLAN
#getLoanDetails=http://10.250.6.21:8090/ELMSPennantViews/customer/getLoanDetails
#getLoanDetailsOthers=http://10.250.6.21:8090/ELMSPennantViews/customer/getLoanDetailsOthers
#feeAPI=http://10.250.6.21:8090/ELMSPennantViews/customer/getOverdue

#Avanse PROD
overDueApi=http://10.162.238.100:8090/ELMSPennantView/customer/getOverdue
isValidLANApi=http://10.162.238.100:8090/ELMSPennantView/customer/isValidLAN
getLoanDetails=http://10.162.238.100:8090/ELMSPennantView/customer/getLoanDetails
getLoanDetailsOthers=http://10.162.238.100:8090/ELMSPennantView/customer/getLoanDetailsOthers
feeAPI=http://10.162.238.100:8090/ELMSPennantView/customer/getOverdue

#UAT proxy ip settings
#proxy.ip=10.250.6.13
#proxy.port=8080
#proxy.user=aitdev
#proxy.password=Tea@1234 

#PROD proxy ip settings
proxy.ip=10.200.1.192
proxy.port=8080
proxy.user=aitdev
proxy.password=Tea@123

## Hibernate Properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2008Dialect
hibernate.dialect = org.hibernate.dialect.SQLServer2008Dialect
hibernate.show_sql=false
hibernate.format_sql=false
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = none


spring.datasource.driver-class-name=com.microsoft.sqlserver.jdbc.SQLServerDriver

#Avanse UAT datasource 
#spring.datasource.url=jdbc:sqlserver://AFMUMDUCRAPDB;databaseName=AvansePI
#spring.datasource.username=sa1
#spring.datasource.password=sa1

#Lauren datasource
#spring.datasource.url=jdbc:sqlserver://192.168.1.181;databaseName=AvansePI
#spring.datasource.username=sa
#spring.datasource.password=Passw0rd

#Avanse PROD datasource 
spring.datasource.url=jdbc:sqlserver://10.162.238.103;databaseName=AvansePI
spring.datasource.username=avansepi_write
spring.datasource.password=Av@nse$write

spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.default-property-inclusion: NON_NULL

#SMS Settings
userId=2000113823
password=q9wqUYsyM
smsUrl=https://enterprise.smsgupshup.com/GatewayAPI/rest?

#Mail properties
spring.mail.host=smtp.falconide.com
spring.mail.port=587
spring.mail.username=avansecom
spring.mail.password=Av@n5ec0m
mail.from=noreply@avanse.com
mail.subject=Avanse Online Payment


###########Pennet API
#Headers
Content-Type=application/json
Authorization=dXNlcjpBVkFCWUpVOlBhc3N3b3JkQDEyMw==
ServiceVersion=1
systemDateService=sysDateService
#Accept=*/*
LANGUAGE=EN
#REQUESTTIME=2019-08-28T12:00:00
entityid=Avanse

#Lauren
#getSystemDate=https://penappuat.avanse.com/pff-api/services/systemDateRest/sysDateService/getSystemDate

#Avanse UAT
#getSystemDate=http://10.250.6.24:80/pff-api/services/systemDateRest/sysDateService/getSystemDate

#Avanse PROD
getSystemDate=http://10.162.238.102/pff-api/services/systemDateRest/sysDateService/getSystemDate
